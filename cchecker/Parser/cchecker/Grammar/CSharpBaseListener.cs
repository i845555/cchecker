//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from cchecker/Grammar/CSharp.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace cchecker.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICSharpListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class CSharpBaseListener : ICSharpListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] CSharpParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] CSharpParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilation_unit([NotNull] CSharpParser.Compilation_unitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilation_unit([NotNull] CSharpParser.Compilation_unitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_directive([NotNull] CSharpParser.Using_directiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_directive([NotNull] CSharpParser.Using_directiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_member_declaration([NotNull] CSharpParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_member_declaration([NotNull] CSharpParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_declaration([NotNull] CSharpParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_declaration([NotNull] CSharpParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration([NotNull] CSharpParser.Type_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration([NotNull] CSharpParser.Type_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_declaration([NotNull] CSharpParser.Class_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_declaration([NotNull] CSharpParser.Class_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_body([NotNull] CSharpParser.Class_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_body([NotNull] CSharpParser.Class_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_member_declaration([NotNull] CSharpParser.Class_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_member_declaration([NotNull] CSharpParser.Class_member_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_declaration([NotNull] CSharpParser.Method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_declaration([NotNull] CSharpParser.Method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_list([NotNull] CSharpParser.Parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_list([NotNull] CSharpParser.Parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] CSharpParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] CSharpParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.field_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_declaration([NotNull] CSharpParser.Field_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.field_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_declaration([NotNull] CSharpParser.Field_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variable_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarators([NotNull] CSharpParser.Variable_declaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variable_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarators([NotNull] CSharpParser.Variable_declaratorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarator([NotNull] CSharpParser.Variable_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarator([NotNull] CSharpParser.Variable_declaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefined_type([NotNull] CSharpParser.Predefined_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefined_type([NotNull] CSharpParser.Predefined_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.qualified_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_name([NotNull] CSharpParser.Qualified_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.qualified_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_name([NotNull] CSharpParser.Qualified_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declaration([NotNull] CSharpParser.Variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declaration([NotNull] CSharpParser.Variable_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expression_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_statement([NotNull] CSharpParser.Expression_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expression_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_statement([NotNull] CSharpParser.Expression_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] CSharpParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] CSharpParser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CSharpParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CSharpParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] CSharpParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] CSharpParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.conditional_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_expr([NotNull] CSharpParser.Conditional_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.conditional_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_expr([NotNull] CSharpParser.Conditional_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.logical_or_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_or_expr([NotNull] CSharpParser.Logical_or_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.logical_or_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_or_expr([NotNull] CSharpParser.Logical_or_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.logical_and_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_and_expr([NotNull] CSharpParser.Logical_and_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.logical_and_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_and_expr([NotNull] CSharpParser.Logical_and_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.equality_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expr([NotNull] CSharpParser.Equality_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.equality_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expr([NotNull] CSharpParser.Equality_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.relational_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expr([NotNull] CSharpParser.Relational_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.relational_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expr([NotNull] CSharpParser.Relational_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.additive_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expr([NotNull] CSharpParser.Additive_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.additive_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expr([NotNull] CSharpParser.Additive_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.multiplicative_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_expr([NotNull] CSharpParser.Multiplicative_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.multiplicative_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_expr([NotNull] CSharpParser.Multiplicative_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.unary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expr([NotNull] CSharpParser.Unary_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.unary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expr([NotNull] CSharpParser.Unary_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary([NotNull] CSharpParser.PrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary([NotNull] CSharpParser.PrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] CSharpParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] CSharpParser.LiteralContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace cchecker.Parser
