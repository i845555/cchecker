//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from cchecker/Grammar/CSharp.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace cchecker.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CSharpParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ICSharpListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] CSharpParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] CSharpParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilation_unit([NotNull] CSharpParser.Compilation_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilation_unit([NotNull] CSharpParser.Compilation_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.using_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsing_directive([NotNull] CSharpParser.Using_directiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.using_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsing_directive([NotNull] CSharpParser.Using_directiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace_member_declaration([NotNull] CSharpParser.Namespace_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace_member_declaration([NotNull] CSharpParser.Namespace_member_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace_declaration([NotNull] CSharpParser.Namespace_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace_declaration([NotNull] CSharpParser.Namespace_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_declaration([NotNull] CSharpParser.Type_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_declaration([NotNull] CSharpParser.Type_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_declaration([NotNull] CSharpParser.Class_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_declaration([NotNull] CSharpParser.Class_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_body([NotNull] CSharpParser.Class_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_body([NotNull] CSharpParser.Class_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_member_declaration([NotNull] CSharpParser.Class_member_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_member_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_member_declaration([NotNull] CSharpParser.Class_member_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_declaration([NotNull] CSharpParser.Method_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_declaration([NotNull] CSharpParser.Method_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_list([NotNull] CSharpParser.Parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_list([NotNull] CSharpParser.Parameter_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] CSharpParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] CSharpParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.field_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField_declaration([NotNull] CSharpParser.Field_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.field_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField_declaration([NotNull] CSharpParser.Field_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variable_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declarators([NotNull] CSharpParser.Variable_declaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variable_declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declarators([NotNull] CSharpParser.Variable_declaratorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declarator([NotNull] CSharpParser.Variable_declaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declarator([NotNull] CSharpParser.Variable_declaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CSharpParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CSharpParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredefined_type([NotNull] CSharpParser.Predefined_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredefined_type([NotNull] CSharpParser.Predefined_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_name([NotNull] CSharpParser.Qualified_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_name([NotNull] CSharpParser.Qualified_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] CSharpParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] CSharpParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CSharpParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CSharpParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declaration([NotNull] CSharpParser.Variable_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declaration([NotNull] CSharpParser.Variable_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expression_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_statement([NotNull] CSharpParser.Expression_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expression_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_statement([NotNull] CSharpParser.Expression_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] CSharpParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] CSharpParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CSharpParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CSharpParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CSharpParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CSharpParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.conditional_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_expr([NotNull] CSharpParser.Conditional_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.conditional_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_expr([NotNull] CSharpParser.Conditional_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.logical_or_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_or_expr([NotNull] CSharpParser.Logical_or_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.logical_or_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_or_expr([NotNull] CSharpParser.Logical_or_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.logical_and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_and_expr([NotNull] CSharpParser.Logical_and_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.logical_and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_and_expr([NotNull] CSharpParser.Logical_and_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.equality_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality_expr([NotNull] CSharpParser.Equality_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.equality_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality_expr([NotNull] CSharpParser.Equality_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.relational_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelational_expr([NotNull] CSharpParser.Relational_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.relational_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelational_expr([NotNull] CSharpParser.Relational_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.additive_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive_expr([NotNull] CSharpParser.Additive_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.additive_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive_expr([NotNull] CSharpParser.Additive_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.multiplicative_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative_expr([NotNull] CSharpParser.Multiplicative_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.multiplicative_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative_expr([NotNull] CSharpParser.Multiplicative_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expr([NotNull] CSharpParser.Unary_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expr([NotNull] CSharpParser.Unary_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] CSharpParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] CSharpParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CSharpParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CSharpParser.LiteralContext context);
}
} // namespace cchecker.Parser
